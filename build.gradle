plugins {
  id 'java'
}

apply plugin: 'maven-publish'

group = 'com.github.christophschubert'
version = '0.3.0-SNAPSHOT'

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()

  maven {
    url 'https://packages.confluent.io/maven'
  }
}

sourceSets {
  intTest {
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
    resources.srcDirs += "$projectDir/src/test/resources"
  }
}

configurations {
  intTestImplementation.extendsFrom testImplementation
  intTestRuntimeOnly.extendsFrom testRuntimeOnly

}

task integrationTest(type: Test) {
  description = "Runs integration tests"
  group = 'verification'

  testClassesDirs = sourceSets.intTest.output.classesDirs
  classpath = sourceSets.intTest.runtimeClasspath
  shouldRunAfter test
}

integrationTest.dependsOn test
check.dependsOn integrationTest

ext {
  confluentVersion = '7.5.2'
  kafkaVersion = '3.5.1'
  testContainerVersion = '1.19.3'
}

dependencies {

  implementation "org.apache.kafka:connect-api:$kafkaVersion"
  implementation "org.apache.kafka:kafka-clients:$kafkaVersion"

  implementation "io.confluent:kafka-avro-serializer:$confluentVersion"

  implementation "org.testcontainers:testcontainers:$testContainerVersion"
  implementation "org.testcontainers:kafka:$testContainerVersion"

  implementation 'ch.qos.logback:logback-classic:1.4.14'

  intTestImplementation "io.rest-assured:rest-assured:5.4.0"
  intTestImplementation "org.awaitility:awaitility:4.2.0"
  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testImplementation 'org.assertj:assertj-core:3.24.2'

  intTestImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: testContainerVersion
  // for localstack/S3 connector integration test
  intTestImplementation "org.testcontainers:localstack:$testContainerVersion"
  intTestImplementation "com.amazonaws:aws-java-sdk-core:1.12.586"
  intTestImplementation "software.amazon.awssdk:s3:2.29.51"

  intTestCompileOnly 'org.projectlombok:lombok:1.18.30'
  intTestAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

}

test {
  useJUnitPlatform()
  
  // Enable parallel test execution
  maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  
  // Enable test forking
  forkEvery = 100
  
  // Increase heap space if needed
  minHeapSize = "256m"
  maxHeapSize = "1g"
}

integrationTest {
  useJUnitPlatform()
  
  // Enable parallel test execution for integration tests
  maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  
  // Enable test forking for integration tests
  forkEvery = 100
  
  // Increase heap space if needed
  minHeapSize = "512m"
  maxHeapSize = "2g"
  
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = false
    events "passed", "skipped", "failed"
    exceptionFormat "full"
  }
}

// Enable Gradle parallel execution
gradle.startParameter.maxWorkerCount = Runtime.runtime.availableProcessors()

// Enable parallel compilation
tasks.withType(JavaCompile) {
  options.fork = true
  options.compilerArgs = [
      '-Xlint:unchecked',
      '-Xlint:deprecation',
      '-Werror'
  ]
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = project.getGroup()
      artifactId = project.getName()
      version = project.getVersion()

      from components.java
    }
  }
}